type Post {
  id: ID!
  author: User!
  title: String!
  categories: [Category!]!
  image: Picture!
  published: Boolean!
  publishedAt: String
  content: String!
  tags: [Tag!]!
  reactionsBy: [User!]!
  comments: [Comment!]!
  createdAt: String!
  updatedAt: String!
}

type PaginatePosts {
  data: [Post!]!
  total: Int!
  hasNext: Boolean!
  nextPage: Int!
  previousPage: Int!
  totalPages: Int!
}

input CreatePostInput {
  title: String!
  image: File!
  categories: [String!]!
  published: Boolean!
  content: String!
  tags: [String!]!
}

input UpdatePostInput {
  id: String!
  title: String
  image: File
  categories: [String!]
  published: Boolean
  content: String
  tags: [String!]
}

type Query {
  posts(limit: Int, page: Int): PaginatePosts
  post(id: ID!): Post!
}

type Mutation {
  createPost(data: CreatePostInput): Post!
  updatePost(data: UpdatePostInput): Post!
  deletePost(id: ID!): ID!
}
