type Comment {
  id: String!
  commenter: User!
  content: String!
  parentComment: Comment
  replies: Int!
  createdAt: String!
  updatedAt: String!
}

input CreateCommentInput {
  postId: ID!
  parentId: ID
  content: String!
}

input UpdateCommentInput {
  commentId: ID!
  content: String!
}

type OffsetCommentsResponse {
  data: [Comment!]!
  total: Int!
  pageInfo: OffsetPageInfo
}

type CursorCommentEdge {
  cursor: ID!
  node: Comment!
}

type CursorCommentsResponse {
  edges: [CursorCommentEdge!]!
  pageInfo: CursorPageInfo!
  total: Int!
}

type Query {
  postCommentsOnOffset(
    postId: ID!
    limit: Int
    page: Int
  ): OffsetCommentsResponse!
  postCommentsOnCursor(
    postId: ID!
    parentId: ID
    limit: Int!
    after: ID
  ): CursorCommentsResponse!
}

type Mutation {
  createComment(data: CreateCommentInput): Comment!
  updateComment(data: UpdateCommentInput): Comment!
  deleteComment(commentId: ID!): ID!
}
